# Set following variables
# serviceConnection: Service connection name for target subscription
# resourceGroup: Name of resource group
# location: Location of resource group (e.g.: japaneast)
# environment: Parameters sub directory name. (e.g.: Development, Production)

trigger:
- none

pool:
  vmImage: 'windows-latest'

steps:
- task: AzurePowerShell@4
  inputs:
    azureSubscription: $(serviceConnection)
    ScriptType: 'FilePath'
    ScriptPath: 'Scripts\DeployResourceGroup.ps1'
    ScriptArguments: '-ResourceGroupName $(resourceGroup) -ResourceGroupLocation $(location)'
    azurePowerShellVersion: LatestVersion
  displayName: 'Deploy Resource Group'
  enabled: true

- task: AzurePowerShell@4
  inputs:
    azureSubscription: $(serviceConnection)
    ScriptType: 'FilePath'
    ScriptPath: 'Scripts\DeployResource.ps1'
    ScriptArguments: -ResourceGroupName $(resourceGroup) -TemplateFile virtualNetworkDeploy.json -TemplateParameterFile virtualNetworkParameters.json -Environment $(environment)
    azurePowerShellVersion: LatestVersion
  displayName: 'Deploy Virtual Network'
  enabled: true

- task: AzurePowerShell@4
  inputs:
    azureSubscription: $(serviceConnection)
    ScriptType: 'FilePath'
    ScriptPath: 'Scripts\DeployResource.ps1'
    ScriptArguments: -ResourceGroupName $(resourceGroup) -TemplateFile storageAccountDeploy.json -TemplateParameterFile storageAccountParameters.json -Environment $(environment)
    azurePowerShellVersion: LatestVersion
  displayName: 'Deploy Storage Account'
  enabled: true

- task: AzurePowerShell@4
  inputs:
    azureSubscription: $(serviceConnection)
    ScriptType: 'FilePath'
    ScriptPath: 'Scripts\DeployResource.ps1'
    ScriptArguments: -ResourceGroupName $(resourceGroup) -TemplateFile appServicePlanDeploy.json -TemplateParameterFile appServicePlanParameters.json -Environment $(environment)
    azurePowerShellVersion: LatestVersion
  displayName: 'Deploy App Service Plan'
  enabled: true

- task: AzurePowerShell@4
  inputs:
    azureSubscription: $(serviceConnection)
    ScriptType: 'FilePath'
    ScriptPath: 'Scripts\DeployResource.ps1'
    ScriptArguments: -ResourceGroupName $(resourceGroup) -TemplateFile applicationInsightsDeploy.json -TemplateParameterFile applicationInsightsParameters.json -Environment $(environment)
    azurePowerShellVersion: LatestVersion
  displayName: 'Deploy Application Insights'
  enabled: true

- task: AzurePowerShell@4
  inputs:
    azureSubscription: $(serviceConnection)
    ScriptType: 'FilePath'
    ScriptPath: 'Scripts\DeployResource.ps1'
    ScriptArguments: -ResourceGroupName $(resourceGroup) -TemplateFile functionAppDeploy.json -TemplateParameterFile functionAppParameters.json -Environment $(environment)
    azurePowerShellVersion: LatestVersion
  displayName: 'Deploy Function App'
  enabled: true

- task: AzureCLI@2
  inputs:
    azureSubscription: 'Visual Studio Ultimate with MSDN Connection'
    scriptType: 'ps'
    scriptLocation: 'scriptPath'
    scriptPath: 'Scripts\DeployVnetIntegrationPreview.ps1'
    arguments: '-ResourceGroupName $(resourceGroup) -TemplateParameterFile vnetIntegrationPreviewParameters.json -Environment $(environment)'
    powerShellErrorActionPreference: 'stop'
  displayName: 'Deploy Virtual Network Integration'
  enabled: true